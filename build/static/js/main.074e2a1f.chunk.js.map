{"version":3,"sources":["Form/form.module.css","Form/Form.js","Filter/Filter.js","ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","Form","name","number","handlerOnChange","handlerSubmit","className","styles","list","onSubmit","listItemLable","listItem","type","value","onChange","btnSubmit","Filter","contacts","filter","length","ContactsList","deleteContact","filteredContacts","contact","toUpperCase","includes","map","key","id","data-id","onClick","App","state","e","preventDefault","newUser","uuid","find","alert","setState","prev","target","delContact","dataset","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.074e2a1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"form_list__8K50A\",\"listItemLable\":\"form_listItemLable__1ql9x\",\"listItem\":\"form_listItem__3TsGL\",\"btnSubmit\":\"form_btnSubmit__3xxds\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nfunction Form({ name, number, handlerOnChange, handlerSubmit }) {\r\n  return (\r\n    <>\r\n      <form className={styles.list} onSubmit={handlerSubmit}>\r\n        <label className={styles.listItemLable}>\r\n          Name\r\n          <input\r\n            className={styles.listItem}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handlerOnChange}\r\n          />\r\n        </label>\r\n        <label className={styles.listItemLable}>\r\n          Number\r\n          <input\r\n            className={styles.listItem}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handlerOnChange}\r\n          />\r\n        </label>\r\n        <button  className={styles.btnSubmit} type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handlerOnChange: PropTypes.func.isRequired,\r\n  handlerSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ contacts, filter, handlerOnChange }) {\r\n  return (\r\n    (contacts.length > 1) && (\r\n      <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handlerOnChange}\r\n      />\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  handlerOnChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactsList({ filter, contacts, deleteContact }) {\r\n  const filteredContacts = contacts.filter(contact => contact.name.toUpperCase().includes(filter.toUpperCase()));\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button type='button' data-id={contact.id} onClick={deleteContact}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    // )\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\nimport { uuid } from 'uuidv4';\nimport Form from './Form/Form';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const newUser = { id: uuid(), name, number };\n\n    const isName = this.state.contacts.find(contact => name === contact.name);\n    if (isName) {\n      alert(`${name} is already contacts.`);\n      this.setState(prev => ({\n        name: '',\n        number: '',\n      }));\n      return;\n    }\n\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newUser],\n      name: '',\n      number: '',\n    }));\n  };\n\n  handlerOnChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  deleteContact = e => {\n    // console.log('e.target: ', e.target.dataset.id);\n    const delContact = this.state.contacts.filter(\n      contact => contact.id !== e.target.dataset.id,\n    );\n    this.setState({\n      contacts: [...delContact],\n    });\n  };\n\n  render() {\n    const { name, number, filter, contacts } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form\n          name={name}\n          number={number}\n          handlerOnChange={this.handlerOnChange}\n          handlerSubmit={this.handlerSubmit}\n        />\n        <h2>Contacts</h2>        \n        <Filter filter={filter} contacts={contacts} handlerOnChange={this.handlerOnChange} />\n        <ContactsList filter={filter} contacts={contacts} deleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}